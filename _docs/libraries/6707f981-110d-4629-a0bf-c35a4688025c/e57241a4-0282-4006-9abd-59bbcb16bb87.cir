<metaGraph _id='0'>
  <graph>
    <graphStorable _id='1'>
      <model>
        <graph _id='2' script='var s = elem.inputBit(&quot;S&quot;);
var r = elem.inputBit(&quot;R&quot;);

if (!s &amp;&amp; !r) {
    return;
}

if (s &amp;&amp; r) {
    elem.setOutputBit(&quot;Q&quot;, false);
    elem.setOutputBit(&quot;!Q&quot;, false);
    return;
}

if (s) {
    elem.setOutputBit(&quot;Q&quot;, true);
    elem.setOutputBit(&quot;!Q&quot;, false);
    return;
}

elem.setOutputBit(&quot;Q&quot;, false);
elem.setOutputBit(&quot;!Q&quot;, true);
'>
          <elements>
            <norGate _id='3' id='1' delay='11' inputCount='2'/>
            <norGate _id='4' id='2' delay='8' inputCount='2'/>
            <circuitInOut _id='5' id='3' name='S' type='input' bitWidth='1'/>
            <circuitInOut _id='6' id='4' name='R' type='input' bitWidth='1'/>
            <circuitInOut _id='7' id='5' name='Q' type='output' bitWidth='1'/>
            <circuitInOut _id='8' id='6' name='!Q' type='output' bitWidth='1'/>
            <digitalNet _id='9' id='7' delay='0'>
              <ports>
                <netPortRef verticeId='5' portId='1'/>
                <netPortRef verticeId='3' portId='1'/>
              </ports>
            </digitalNet>
            <digitalNet _id='10' id='8' delay='0'>
              <ports>
                <netPortRef verticeId='4' portId='2'/>
                <netPortRef verticeId='6' portId='1'/>
              </ports>
            </digitalNet>
            <digitalNet _id='11' id='9' delay='0'>
              <ports>
                <netPortRef verticeId='8' portId='1'/>
                <netPortRef verticeId='3' portId='3'/>
                <netPortRef verticeId='4' portId='1'/>
              </ports>
            </digitalNet>
            <digitalNet _id='12' id='10' delay='0'>
              <ports>
                <netPortRef verticeId='4' portId='3'/>
                <netPortRef verticeId='3' portId='2'/>
                <netPortRef verticeId='7' portId='1'/>
              </ports>
            </digitalNet>
          </elements>
        </graph>
      </model>
      <view>
        <graphView _id='13'>
          <netViews>
            <netView _id='41' modelId='12' style='line'/>
            <netView _id='42' modelId='9' style='line'/>
            <netView _id='43' modelId='11' style='line'/>
            <netView _id='44' modelId='10' style='line'/>
          </netViews>
          <scenarios>
            <scenarios _id='30'>
              <scenarios>
                <scenario _id='31' id='1' condition='return circuit.input(&quot;S&quot;) == &quot;1&quot; &amp;&amp; circuit.input(&quot;R&quot;) == &quot;0&quot;;'>
                  <name>
                    <translation lang='de' text='Setzen'/>
                    <translation lang='en' text='Set'/>
                  </name>
                  <desc>
                    <translation lang='en' text='Store: A 1 at input S sets the SR latch if R is 0 at the same time. The stored value 1 appears at output Q.'/>
                    <translation lang='de' text='Setzen: Mit einer 1 am Eingang S wird das SR Latch gesetzt, wenn der Eingang R gleichzeitig auf 0 ist. Der Zustand 1 erscheint am Ausgang Q.'/>
                  </desc>
                  <steps>
                    <scenarioStep _id='32' id='1' highlightIds='1' condition='return circuit.elem(1).input(1) == &quot;1&quot; &amp;&amp; circuit.elem(1).input(2) == &quot;0&quot; &amp;&amp; circuit.elem(1).output() == &quot;1&quot;;' onEntry='' onExit=''>
                      <name>
                        <translation lang='de' text='S-Gatter berechnen'/>
                        <translation lang='en' text='Calculate S-gate'/>
                      </name>
                      <desc>
                        <translation lang='en' text='By setting the input &quot;S&quot;, one input of the upper NOR gate is 1, a NOR gate is only 1 if both inputs are 0. Therefore the upper NOR gate switches to 0.'/>
                        <translation lang='de' text='Durch das Setzen des Eingangs &quot;S&quot; ist ein Eingang des oberen NOR-Gates 1. Ein NOR-Gate ist nur 1, wenn beide Eingäge 0 sind. Deshalb schaltet das obere NOR-Gate auf 0.'/>
                      </desc>
                    </scenarioStep>
                    <scenarioStep _id='33' id='2' highlightIds='9,11,13' condition='return circuit.elem(1).input(1) == &quot;1&quot; &amp;&amp; circuit.elem(1).input(2) == &quot;0&quot; &amp;&amp; circuit.elem(1).output() == &quot;0&quot; &amp;&amp; circuit.elem(2).input(1) == &quot;1&quot;;' onEntry='' onExit=''>
                      <name>
                        <translation lang='de' text='!Q zurücksetzen'/>
                        <translation lang='en' text='Reset !Q'/>
                      </name>
                      <desc>
                        <translation lang='en' text='The 0 at the output of the upper NOR gate is given to the output !Q (which is now correctly set) and to the lower NOR gate.'/>
                        <translation lang='de' text='Das 0 am Ausgang des oberen NOR-Gates wird einerseits an den Ausgang !Q gegeben (der damit nun richtig gesetzt ist), und andererseits an das untere NOR-Gate.'/>
                      </desc>
                    </scenarioStep>
                    <scenarioStep _id='34' id='3' highlightIds='2' condition='return circuit.elem(2).input(1) == &quot;0&quot; &amp;&amp; circuit.elem(2).input(2) == &quot;0&quot; &amp;&amp; circuit.elem(2).output() == &quot;0&quot;;' onEntry='' onExit=''>
                      <name>
                        <translation lang='de' text='R-Gatter berechnen'/>
                        <translation lang='en' text='Calculate R-gate'/>
                      </name>
                      <desc>
                        <translation lang='en' text='The 0 from the output of the upper NOR gate has arrived at the lower NOR gate. The output of a NOR gate is 1 if both inputs are 0. Since the second input already has a 0 from the R input, the lower NOR gate switches to 1.'/>
                        <translation lang='de' text='Die 0 vom Ausgang des oberen NOR-Gate ist am unteren NOR-Gate angekommen. Der Ausgang einer NOR-Gate ist 1, wenn beide Eingänge 0 sind. Da der zweite Eingang bereits eine 0 vom R-Eingang hat, schaltet das untere NOR-Gate auf 1.'/>
                      </desc>
                    </scenarioStep>
                    <scenarioStep _id='35' id='4' highlightIds='10,14,16' condition='return circuit.elem(2).input(1) == &quot;0&quot; &amp;&amp; circuit.elem(2).input(2) == &quot;0&quot; &amp;&amp; circuit.elem(2).output() == &quot;1&quot; &amp;&amp; circuit.elem(1).input(2) == &quot;0&quot;;' onEntry='' onExit=''>
                      <name>
                        <translation lang='de' text='Q setzen'/>
                        <translation lang='en' text='Set Q'/>
                      </name>
                      <desc>
                        <translation lang='en' text='The 1 of lower NOR gate is on the one hand routed to output Q (which is now correctly set), and on the other hand sent to the upper NOR gate.'/>
                        <translation lang='de' text='Die 1 von unteren NOR-Gate wird einerseits an den Ausgang Q geleitet (der damit nun richtig gesetzt ist), und andererseits an das obere NOR-Gate geschickt.'/>
                      </desc>
                    </scenarioStep>
                    <scenarioStep _id='36' id='5' highlightIds='1' condition='return circuit.elem(1).input(1) == &quot;1&quot; &amp;&amp; circuit.elem(1).input(2) == &quot;1&quot; &amp;&amp; circuit.elem(1).output() == &quot;0&quot;;'>
                      <name>
                        <translation lang='de' text='S-Gatter bestätigen'/>
                        <translation lang='en' text='Confirm S-gate'/>
                      </name>
                      <desc>
                        <translation lang='en' text='The 1 from the lower NOR gate has arrived at the upper NOR gate. Now both inputs are at 1 and the output of the NOR gate remains at 1. The latch is now stable. Even if later the 1 from input &quot;S&quot; should disappear, the output of this NOR gate remains at 0, thanks to the 1 from the lower NOR gate.'/>
                        <translation lang='de' text='Die 1 vom unteren NOR-Gate ist am oberen NOR-Gate angekommen. Nun sind beide Eingäge auf 1, und der Ausgang des NOR-Gates bleibt auf 1. Das Latch ist nun stabil. Selbst wenn später die 1 vom Eingang &quot;S&quot; verschwinden sollte, bleibt der Ausgang dieses NOR-Gates dank der 1 vom unteren NOR-Gate trotzdem auf 0.'/>
                      </desc>
                    </scenarioStep>
                  </steps>
                </scenario>
                <scenario _id='37' id='2' condition='return circuit.input(&quot;S&quot;) == &quot;0&quot; &amp;&amp; circuit.input(&quot;R&quot;) == &quot;1&quot;;'>
                  <name>
                    <translation lang='de' text='Zurücksetzen'/>
                    <translation lang='en' text='Reset'/>
                  </name>
                  <desc>
                    <translation lang='en' text='Reset: A 1 at input R resets the SR latch, if input S is 0 at the same time. The new stored state 0 appears at output Q.'/>
                    <translation lang='de' text='Zurücksetzen: Mit einer 1 am Eingang R wird das SR Latch zurückgesetzt, wenn der Eingang S gleichzeitig auf 0 ist. Der Zustand 0 erscheint am Ausgang Q.'/>
                  </desc>
                  <steps/>
                </scenario>
                <scenario _id='38' id='3' condition='return circuit.input(&quot;S&quot;) == &quot;0&quot; &amp;&amp; circuit.input(&quot;R&quot;) == &quot;0&quot;;'>
                  <name>
                    <translation lang='de' text='Speichern'/>
                    <translation lang='en' text='Store'/>
                  </name>
                  <desc>
                    <translation lang='en' text='Store: If both inputs S and R are 0, the value of the flipflop  keeps stored.'/>
                    <translation lang='de' text='Speichern: Wenn beide Eingänge S und R auf 0 sind, bleibt der aktuelle Zustand des Flipflops gespeichert.'/>
                  </desc>
                  <steps/>
                </scenario>
                <scenario _id='39' id='4' condition='return circuit.input(&quot;S&quot;) == &quot;1&quot; &amp;&amp; circuit.input(&quot;R&quot;) == &quot;1&quot;;'>
                  <name>
                    <translation lang='de' text='Race Condition'/>
                    <translation lang='en' text='Race Condition'/>
                  </name>
                  <desc>
                    <translation lang='de' text='Race Condition: Wenn beide Eingänge auf 1 sind, sind beide Ausgänge auf 0. Dieser Zustand ist nicht speicherbar. Wenn anschliessend beide Eingänge auf 0 gehen, ist nicht vorhersehbar, in welchen Zustand das Latch kippt.'/>
                    <translation lang='en' text='Race condition: If both input are 1, both outputs are 0. This illegal state cannot be stored.'/>
                  </desc>
                  <steps/>
                </scenario>
              </scenarios>
            </scenarios>
          </scenarios>
          <components>
            <norGateView _id='29' id='1' rot='0' modelId='3' x='-168.0' y='-364.0'/>
            <norGateView _id='28' id='2' rot='0' modelId='4' x='-168.0' y='-238.0'/>
            <circuitInOutView _id='27' id='3' modelId='5' representation='binary' orientation='east'>
              <location>
                <point x='-308.0' y='-378.0'/>
              </location>
            </circuitInOutView>
            <circuitInOutView _id='26' id='4' modelId='6' representation='binary' orientation='east'>
              <location>
                <point x='-308.0' y='-224.0'/>
              </location>
            </circuitInOutView>
            <circuitInOutView _id='25' id='5' modelId='7' representation='binary' orientation='east'>
              <location>
                <point x='-28.0' y='-364.0'/>
              </location>
            </circuitInOutView>
            <circuitInOutView _id='24' id='6' modelId='8' representation='binary' orientation='east'>
              <location>
                <point x='-28.0' y='-238.0'/>
              </location>
            </circuitInOutView>
            <digitalEdgeView _id='23' id='7' modelId='9' layout='ortho' orig='27' origPort='1' origPortOutput='true' dest='29' destPort='1' adjusted='false'>
              <shape>
                <polylineShape points='-322.0,-378.0 -228.0,-378.0'/>
              </shape>
            </digitalEdgeView>
            <digitalEdgeView _id='22' id='8' modelId='10' layout='ortho' orig='26' origPort='1' origPortOutput='true' dest='28' destPort='2' adjusted='false'>
              <shape>
                <polylineShape points='-322.0,-224.0 -228.0,-224.0'/>
              </shape>
            </digitalEdgeView>
            <digitalEdgeView _id='21' id='9' modelId='11' layout='none' orig='29' origPort='3' origPortOutput='true' dest='18' adjusted='false'>
              <shape>
                <polylineShape points='-174.0,-364.0 -140.0,-364.0'/>
              </shape>
            </digitalEdgeView>
            <digitalEdgeView _id='20' id='10' modelId='12' layout='none' orig='28' origPort='3' origPortOutput='true' dest='15' adjusted='false'>
              <shape>
                <polylineShape points='-174.0,-238.0 -140.0,-238.0'/>
              </shape>
            </digitalEdgeView>
            <digitalEdgeView _id='19' id='11' modelId='11' layout='none' orig='18' dest='28' destPort='1' adjusted='false'>
              <shape>
                <polylineShape points='-140.0,-364.0 -140.0,-322.0 -252.0,-280.0 -252.0,-252.0 -228.0,-252.0'/>
              </shape>
            </digitalEdgeView>
            <digitalNodeView _id='18' id='12' modelId='11'>
              <location>
                <point x='-140.0' y='-364.0'/>
              </location>
            </digitalNodeView>
            <digitalEdgeView _id='17' id='13' modelId='11' layout='none' orig='18' dest='24' destPort='1' adjusted='false'>
              <shape>
                <polylineShape points='-140.0,-364.0 -112.0,-364.0 -42.0,-238.0 -14.0,-238.0'/>
              </shape>
            </digitalEdgeView>
            <digitalEdgeView _id='16' id='14' modelId='12' layout='none' orig='15' dest='29' destPort='2' adjusted='false'>
              <shape>
                <polylineShape points='-140.0,-238.0 -140.0,-280.0 -252.0,-322.0 -252.0,-350.0 -228.0,-350.0'/>
              </shape>
            </digitalEdgeView>
            <digitalNodeView _id='15' id='15' modelId='12'>
              <location>
                <point x='-140.0' y='-238.0'/>
              </location>
            </digitalNodeView>
            <digitalEdgeView _id='14' id='16' modelId='12' layout='none' orig='15' dest='25' destPort='1' adjusted='false'>
              <shape>
                <polylineShape points='-140.0,-238.0 -112.0,-238.0 -42.0,-364.0 -14.0,-364.0'/>
              </shape>
            </digitalEdgeView>
          </components>
        </graphView>
      </view>
    </graphStorable>
  </graph>
  <container>
    <containerDrawing _id='45'>
      <components>
        <rectangle _id='55' id='1' style='figure' x='140.0' y='140.0' w='56.0' h='84.0'/>
        <originIndicator _id='54'>
          <location>
            <point x='126.0' y='154.0'/>
          </location>
        </originIndicator>
        <digitalPortViewComp _id='52' id='2' style='figure' showBitWidthAnnotation='true'>
          <portView>
            <digitalPortView _id='53' x='140.0' y='154.0' dir='west' textPos='internal' portId='57'/>
          </portView>
        </digitalPortViewComp>
        <digitalPortViewComp _id='50' id='3' style='figure' showBitWidthAnnotation='true'>
          <portView>
            <digitalPortView _id='51' x='140.0' y='210.0' dir='west' textPos='internal' portId='58'/>
          </portView>
        </digitalPortViewComp>
        <digitalPortViewComp _id='48' id='4' style='figure' showBitWidthAnnotation='true'>
          <portView>
            <digitalPortView _id='49' x='196.0' y='154.0' dir='east' textPos='internal' portId='59'/>
          </portView>
        </digitalPortViewComp>
        <digitalPortViewComp _id='46' id='5' style='figure' showBitWidthAnnotation='true'>
          <portView>
            <digitalPortView _id='47' x='196.0' y='210.0' dir='east' textPos='internal' portId='60'/>
          </portView>
        </digitalPortViewComp>
      </components>
      <model>
        <subGraphVertice _id='56' id='0' delay='0' uuid='e57241a4-0282-4006-9abd-59bbcb16bb87'>
          <desc>
            <translation lang='en' text='Level-triggered NOR latch mit set input S and reset input R'/>
            <translation lang='de' text='Nicht-taktgesteuertes NOR-Latch mit Setzeingang S und Rücksetzeingang R'/>
          </desc>
          <name>
            <translation lang='en' text='SR Latch'/>
            <translation lang='de' text='SR Latch'/>
          </name>
          <desc>
            <translation lang='en' text='Level-triggered NOR latch mit set input S and reset input R'/>
            <translation lang='de' text='Nicht-taktgesteuertes NOR-Latch mit Setzeingang S und Rücksetzeingang R'/>
          </desc>
          <ports>
            <subCircuitPort _id='57' portId='1' name='S' logic='positive' bitWidth='1' trigger='level' type='input' representation='binary'/>
            <subCircuitPort _id='58' portId='2' name='R' logic='positive' bitWidth='1' trigger='level' type='input' representation='binary'/>
            <subCircuitPort _id='59' portId='3' name='Q' logic='positive' bitWidth='1' trigger='level' type='output' representation='binary'/>
            <subCircuitPort _id='60' portId='4' name='!Q' logic='negative' bitWidth='1' trigger='level' type='output' representation='binary'/>
          </ports>
        </subGraphVertice>
      </model>
    </containerDrawing>
  </container>
</metaGraph>